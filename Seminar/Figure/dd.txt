## 뭐라도 해보자

마지막으로 어플에 간단한 기능을 추가해봅시다.
우리가 첫날 할 내용은 어플내에 화면이동입니다. 

먼저 새로운 페이지를 생성합니다. Android app에서는 activity하나가 하나의 페이지가 됩니다.
새로운 activity를 만드는건 어려우니 기존에 있던 activity를 복사합시다.
![activitycopy](https://github.com/lkiung/SKKUMathcom-AndroidApp/blob/master/Seminar/Figure/2-8.PNG)
그림과 같이 프로젝트 솔루션에서 MainActivity를 복사해 SecondActivity를 만들고 activity_main.xml을 복사해 activity_second.xml을 만들어줍니다.

그럼 이제 main activity에서 다음 화면으로 넘어갈 버튼을 만들어줍시다. acitivity_main.xml의 design에서 "hello world"를 지우고 버튼을 드래그해 만들어줍니다.
![makebutton](https://github.com/lkiung/SKKUMathcom-AndroidApp/blob/master/Seminar/Figure/firstpage.PNG)

버튼이 좀 너무 기본값으로 되있으니 바꿔봅시다.
xml우측창은 각 component의 properties를 나타냅니다. 하단의 view all properties를 눌러 여러 사항들을 바꿔주죠.

저는 id를 PageChange, layout_width를 match_parent로, text를 눌러봐 로 바꿨습니다. 

그리구 가장 중요한건 onClick에 버튼을 클릭할 때의 event 이름을 정해줘야합니다. 전 onClick을 onButtonClicked로 바꿨습니다.
![property](https://github.com/lkiung/SKKUMathcom-AndroidApp/blob/master/Seminar/Figure/2-10.PNG)

이 xml파일의 코드를 보면 중간에 
```shell

    <Button
        android:text="눌러봐"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_centerVertical="true"
        android:layout_centerHorizontal="true"
        android:id="@+id/PageChange"
        android:onClick="onButtonClicked"
        android:allowUndo="false" />
```

로 바뀐걸 확인할 수 있습니다.

xml파일을 변경해줬으면 버튼을 클릭하는 이벤트가 발생했을 때에 행동을 할 함수를 Java내에 만들어 줘야 합니다.

저희가 PageChange를 클릭했을 때의 이벤트는 onButtonClicked로 명명을 하였기에 Main Activity의 아래에 onButtonClicked class를 만들어줍니다.
```shell
public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    public void onButtonClicked(View v)
    {
    }
}
```

-------------------------------------------------------------------------------------

이제 두번째 페이지를 위해 SecondActivity.java를 살펴봅시다.
SecondActivity는 activity를 create할 때 activity_second.xml을 화면에 출력하므로 onCreate class를 바꿔줍니다.

```shell
public class SecondActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
    }

}
```

그리고나서 activity_second에 button을 클릭했을 때의 event를 MainActivity때 처럼 다뤄줍니다.

```shell
public class SecondActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
    }
    public void onButtonClicked(View v)
    {
     //여기에 이제 원하는 action을 넣어줍니다.   
    }

}

```


```shell
    <Button
        android:text="뒤로 가기"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/backButton"
        android:onClick="onButtonClicked"
        android:layout_alignParentTop="true"
        android:layout_alignParentStart="true"
        android:layout_marginTop="205dp"
        android:layout_alignParentLeft="true" />
```


**Toast 추가하기**
어플을 클릭해서 단순히 넘어가니 심심하다,휴대폰 충전기를 연결하면 휴대폰이 충전된다는 메세지가 팝업되듯이 버튼을 클릭하면 메세지가 떳으면 좋겠다 하면 Toast를 사용할 수 있습니다.

Toast는 안드로이드에서 제공하는 간단한 메세지위젯으로 android.widget.Toast를 import하여 사용할 수 있습니다.

Toast로 메세지를 띄우려면 해당 이벤트에 Toast.makeText 함수를 쓰면 됩니다.

저희 케이스는 아래와 같이 하면 되죠


```shell
 public void onButtonClicked(View v)
    {
        Toast.makeText(this,"다음화면으로 넘어갑니다.",Toast.LENGTH_LONG).show();
```
makeText의 input은 먼저, 해당 buffer, 메세지 혹은 메세지가 들은 object, option 순입니다.





**한글 깨짐 현상**
한글 깨짐 현상이 나타날수 있는데 이는 안드로이드 설치경로로 들어가서
plugins/android/lib/layoutlib/data/fonts의 font.xml을 관리자 권한으로 실행해 줍니다.

350번째줄 정도에 
```shell
    <family lang="ko">
        <font weight="400" style="normal" index="1">NotoSansCJK-Regular.ttc</font>
    </family>
```

을 발견할 수 있는데 이를 

```shell
    <family lang="ko">
        <font weight="400" style="normal" index="1">NanumGothic.ttf</font>
    </family>
```
로 수정해줍니다.


관리자권한으로 실행이 어렵다 하면 외부에 저장하구 옮겨주면 되요
신중하게 하시길.. 하다 뻑나서 전 다시 설치했습니다ㅠㅠㅠ



